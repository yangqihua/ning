<style lang="less" rel="stylesheet/less">
	@import "./styles/base";
	@import "./styles/icon";
	@import "./styles/style";
</style>

<script>
	import wepy from 'wepy'
	import 'wepy-async-function'
	import {
		BASE_URL,
		USER_INFO,
		SYSTEM_INFO,
	} from "./utils/constant";

	import HTTPUtil from './utils/HTTPUtil'
	import tip from './utils/tip'

	export default class extends wepy.app {
		config = {
			pages: [
				'pages/home/index',
				'pages/home/top',
				'pages/home/search',
				'pages/home/me',
				'pages/home_details',
				'pages/goods_details',
				'pages/search_details',
				'pages/help/jiaocheng',
				'pages/help/jiaocheng1',
				'pages/web_view',

				'pages/agent/tixian',
				'pages/agent/read_tixian',
				'pages/agent/order',
				'pages/agent/user',
				'pages/agent/agent',
				'pages/agent/show_apply',
				'pages/agent/apply_agent',
			],
			window: {
				backgroundTextStyle: 'dark',
				navigationBarBackgroundColor: '#ff5777',
				navigationBarTitleText: '柠檬好物',
				navigationBarTextStyle: '#fff',
				enablePullDownRefresh: false,
				backgroundColor: '#fefefe',
			},
			tabBar: {
				color: "#666",
				selectedColor: "#ff5777",
				backgroundColor: "#ffffff",
				borderStyle: "#b2b2b2",
				list: [
					{
						pagePath: 'pages/home/index',
						text: "首页",
						iconPath: "images/home/homepage.png",
						selectedIconPath: "images/home/homepage_fill.png"
					},
					{
						pagePath: 'pages/home/top',
						text: "好货精选",
						iconPath: "images/home/integral.png",
						selectedIconPath: "images/home/integral_fill.png"
					},
					{
						pagePath: 'pages/home/search',
						text: "搜索",
						iconPath: "images/home/search.png",
						selectedIconPath: "images/home/search_fill.png"
					},
					{
						pagePath: 'pages/home/me',
						text: "个人中心",
						iconPath: "images/home/people.png",
						selectedIconPath: "images/home/people_fill.png"
					}
				]
			}
		}

		globalData = {
			userInfo: null,
			isWxCode:false,
		}

		constructor() {
			super()
			this.use('requestfix')
			this.use('promisify')
		}

		onLaunch(options) {
			this.checkIsWxCode(options['scene']);
			if (!this.globalData.isWxCode) {
				let requestCode = this.getRequestCode(options);
				this.checkLogin(requestCode)
			}
		}

		checkIsWxCode(scene) {
			this.globalData.isWxCode = scene == 1047 || scene == 1048 || scene == 1049;
		}

		checkLogin(requestCode) {
			let userInfo = wepy.getStorageSync(USER_INFO) || {};
			wx.checkSession({
				success: () => {
					if ((!userInfo.openid) || (!userInfo.nickName) || (!userInfo.avatarUrl)) {
						this.login(requestCode);
					} else {
						this.getAgentCode(requestCode);
					}
				},
				fail: () => {
					this.login(requestCode);
				}
			})
		}

		async login(requestCode) {
			let res = await wepy.login();
			if (res.code) {
				let userResult = await wepy.getUserInfo();
				let userInfo = userResult.userInfo;

				let systemInfo = wepy.getSystemInfoSync();
				wepy.setStorageSync(SYSTEM_INFO, systemInfo);

				let params = {
					code: res.code,
					request_code: requestCode,
					avatarUrl: userInfo.avatarUrl,
					city: userInfo.city,
					province: userInfo.province,
					gender: userInfo.gender,
					nickName: userInfo.nickName
				};
				let data = {
					url: 'auth/login',
					params: params,
					scb: (result) => {
						console.log("result:", result);
						userInfo['openid'] = result['openid'];
						userInfo['agentCode'] = result['is_agent'];
						userInfo['requestCode'] = result['request_code'];
						this.globalData.userInfo = userInfo;
						wepy.setStorageSync(USER_INFO, userInfo);

					},
				}
				HTTPUtil.get(data);
			}
		}

		getRequestCode(options) {
			let query = options['query'];
			let requestCode = '';
			if (query.hasOwnProperty('request_code')) {
				requestCode = query['request_code'];
			}
//			tip.success(requestCode);
			return requestCode;
		}

		getAgentCode(options) {
			let userInfo = this.getUserInfo();
			let data = {
				url: 'auth/check_agent',
				isLoading: false,
				params: {openid: userInfo.openid},
				scb: (result) => {
					let agentCode = result['is_agent'];
					if (agentCode == '-1') {
						this.login(options);
					} else {
						userInfo['agentCode'] = agentCode;
						userInfo['requestCode'] = result['request_code'];
						this.globalData.userInfo = userInfo;
						wepy.setStorageSync(USER_INFO, userInfo);
					}
				},
			}
			HTTPUtil.get(data);
		}

		getUserInfo() {
			return this.globalData.userInfo || wepy.getStorageSync(USER_INFO)
		}
	}
</script>
